{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(mutation, DocumentType.Mutation);\n  var _a = useState({\n      called: false,\n      loading: false,\n      client: client\n    }),\n    result = _a[0],\n    setResult = _a[1];\n  var ref = useRef({\n    result: result,\n    mutationId: 0,\n    isMounted: true,\n    client: client,\n    mutation: mutation,\n    options: options\n  });\n  {\n    Object.assign(ref.current, {\n      client: client,\n      options: options,\n      mutation: mutation\n    });\n  }\n  var execute = useCallback(function (executeOptions) {\n    if (executeOptions === void 0) {\n      executeOptions = {};\n    }\n    var _a = ref.current,\n      client = _a.client,\n      options = _a.options,\n      mutation = _a.mutation;\n    var baseOptions = __assign(__assign({}, options), {\n      mutation: mutation\n    });\n    if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n      setResult(ref.current.result = {\n        loading: true,\n        error: void 0,\n        data: void 0,\n        called: true,\n        client: client\n      });\n    }\n    var mutationId = ++ref.current.mutationId;\n    var clientOptions = mergeOptions(baseOptions, executeOptions);\n    return client.mutate(clientOptions).then(function (response) {\n      var _a, _b, _c;\n      var data = response.data,\n        errors = response.errors;\n      var error = errors && errors.length > 0 ? new ApolloError({\n        graphQLErrors: errors\n      }) : void 0;\n      if (mutationId === ref.current.mutationId && !clientOptions.ignoreResults) {\n        var result_1 = {\n          called: true,\n          loading: false,\n          data: data,\n          error: error,\n          client: client\n        };\n        if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n          setResult(ref.current.result = result_1);\n        }\n      }\n      (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data, clientOptions);\n      (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data, clientOptions);\n      return response;\n    }).catch(function (error) {\n      var _a, _b, _c, _d;\n      if (mutationId === ref.current.mutationId && ref.current.isMounted) {\n        var result_2 = {\n          loading: false,\n          error: error,\n          data: void 0,\n          called: true,\n          client: client\n        };\n        if (!equal(ref.current.result, result_2)) {\n          setResult(ref.current.result = result_2);\n        }\n      }\n      if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n        (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error, clientOptions);\n        (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error, clientOptions);\n        return {\n          data: void 0,\n          errors: error\n        };\n      }\n      throw error;\n    });\n  }, []);\n  var reset = useCallback(function () {\n    if (ref.current.isMounted) {\n      setResult({\n        called: false,\n        loading: false,\n        client: client\n      });\n    }\n  }, []);\n  useEffect(function () {\n    ref.current.isMounted = true;\n    return function () {\n      ref.current.isMounted = false;\n    };\n  }, []);\n  return [execute, __assign({\n    reset: reset\n  }, result)];\n}","map":{"version":3,"names":["__assign","useCallback","useEffect","useRef","useState","mergeOptions","equal","DocumentType","verifyDocumentType","ApolloError","useApolloClient","useMutation","mutation","options","client","Mutation","_a","called","loading","result","setResult","ref","mutationId","isMounted","Object","assign","current","execute","executeOptions","baseOptions","ignoreResults","error","data","clientOptions","mutate","then","response","_b","_c","errors","length","graphQLErrors","result_1","onCompleted","call","catch","_d","result_2","onError","reset"],"sources":["C:/Users/Arvind/Documents/RogersInterviewDemo2/angular/node_modules/@apollo/client/react/hooks/useMutation.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { mergeOptions, } from \"../../core/index.js\";\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    }\n    var execute = useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, client = _a.client, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        if (!ref.current.result.loading && !baseOptions.ignoreResults && ref.current.isMounted) {\n            setResult(ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            });\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client.mutate(clientOptions).then(function (response) {\n            var _a, _b, _c;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0\n                ? new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult(ref.current.result = result_1);\n                }\n            }\n            (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, response.data, clientOptions);\n            (_c = executeOptions.onCompleted) === null || _c === void 0 ? void 0 : _c.call(executeOptions, response.data, clientOptions);\n            return response;\n        }).catch(function (error) {\n            var _a, _b, _c, _d;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult(ref.current.result = result_2);\n                }\n            }\n            if (((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) || clientOptions.onError) {\n                (_c = (_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onError) === null || _c === void 0 ? void 0 : _c.call(_b, error, clientOptions);\n                (_d = executeOptions.onError) === null || _d === void 0 ? void 0 : _d.call(executeOptions, error, clientOptions);\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = useCallback(function () {\n        if (ref.current.isMounted) {\n            setResult({ called: false, loading: false, client: client });\n        }\n    }, []);\n    useEffect(function () {\n        ref.current.isMounted = true;\n        return function () {\n            ref.current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}