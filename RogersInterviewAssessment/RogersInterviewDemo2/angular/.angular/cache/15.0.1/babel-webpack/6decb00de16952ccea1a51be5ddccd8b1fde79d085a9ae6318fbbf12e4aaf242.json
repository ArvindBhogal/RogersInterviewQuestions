{"ast":null,"code":"import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\nfunction isScalarValue(value) {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');\n  }\n}\nfunction storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n            value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n  var argObj = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\nfunction getStoreKeyName(fieldName, args, directives) {\n  if (directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var queryArgs_1 = args;\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = queryArgs_1[key];\n      });\n      return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n  var completeFieldName = fieldName;\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\" + stringifiedArgs + \")\";\n  }\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n      } else {\n        completeFieldName += \"@\" + key;\n      }\n    });\n  }\n  return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n        value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n  return null;\n}\nfunction resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n  return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n  return idObject && idObject.type === 'id' && typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n  if (generated === void 0) {\n    generated = false;\n  }\n  return __assign({\n    type: 'id',\n    generated: generated\n  }, typeof idConfig === 'string' ? {\n    id: idConfig,\n    typename: undefined\n  } : idConfig);\n}\nfunction isJsonValue(jsonObject) {\n  return jsonObject != null && typeof jsonObject === 'object' && jsonObject.type === 'json';\n}\nfunction defaultValueFromVariable(node) {\n  throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n  if (onVariable === void 0) {\n    onVariable = defaultValueFromVariable;\n  }\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n    case 'NullValue':\n      return null;\n    case 'IntValue':\n      return parseInt(node.value, 10);\n    case 'FloatValue':\n      return parseFloat(node.value);\n    case 'ListValue':\n      return node.values.map(function (v) {\n        return valueFromNode(v, onVariable);\n      });\n    case 'ObjectValue':\n      {\n        var value = {};\n        for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n          var field = _a[_i];\n          value[field.name.value] = valueFromNode(field.value, onVariable);\n        }\n        return value;\n      }\n    default:\n      return node.value;\n  }\n}\nfunction getDirectiveInfoFromField(field, variables) {\n  if (field.directives && field.directives.length) {\n    var directiveObj_1 = {};\n    field.directives.forEach(function (directive) {\n      directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n    });\n    return directiveObj_1;\n  }\n  return null;\n}\nfunction shouldInclude(selection, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n  return getInclusionDirectives(selection.directives).every(function (_a) {\n    var directive = _a.directive,\n      ifArgument = _a.ifArgument;\n    var evaledValue = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[ifArgument.value.name.value];\n      process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\nfunction getDirectiveNames(doc) {\n  var names = [];\n  visit(doc, {\n    Directive: function (node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\nfunction hasDirectives(names, doc) {\n  return getDirectiveNames(doc).some(function (name) {\n    return names.indexOf(name) > -1;\n  });\n}\nfunction hasClientExports(document) {\n  return document && hasDirectives(['client'], document) && hasDirectives(['export'], document);\n}\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n  return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n    var directiveArguments = directive.arguments;\n    var directiveName = directive.name.value;\n    process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n    var ifArgument = directiveArguments[0];\n    process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n    var ifValue = ifArgument.value;\n    process.env.NODE_ENV === \"production\" ? invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n    return {\n      directive: directive,\n      ifArgument: ifArgument\n    };\n  }) : [];\n}\nfunction getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n    }\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n  if (typeof actualFragmentName === 'undefined') {\n    process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n    actualFragmentName = fragments[0].name.value;\n  }\n  var query = __assign(__assign({}, document), {\n    definitions: __spreadArrays([{\n      kind: 'OperationDefinition',\n      operation: 'query',\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [{\n          kind: 'FragmentSpread',\n          name: {\n            kind: 'Name',\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions)\n  });\n  return query;\n}\nfunction assign(target) {\n  var sources = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n  sources.forEach(function (source) {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n    Object.keys(source).forEach(function (key) {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\nfunction getMutationDefinition(doc) {\n  checkDocument(doc);\n  var mutationDef = doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.operation === 'mutation';\n  })[0];\n  process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n  return mutationDef;\n}\nfunction checkDocument(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  var operations = doc.definitions.filter(function (d) {\n    return d.kind !== 'FragmentDefinition';\n  }).map(function (definition) {\n    if (definition.kind !== 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n    }\n    return definition;\n  });\n  process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n  return doc;\n}\nfunction getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n  var def = getOperationDefinition(document);\n  process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n  return def;\n}\nfunction getOperationName(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.name;\n  }).map(function (x) {\n    return x.name.value;\n  })[0] || null;\n}\nfunction getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'FragmentDefinition';\n  });\n}\nfunction getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n  return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n  var fragmentDef = doc.definitions[0];\n  process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n  return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n    if (definition.kind === 'OperationDefinition') {\n      var operation = definition.operation;\n      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {\n        return definition;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      fragmentDefinition = definition;\n    }\n  }\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n  throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\nfunction getDefaultValues(definition) {\n  if (definition && definition.variableDefinitions && definition.variableDefinitions.length) {\n    var defaultValues = definition.variableDefinitions.filter(function (_a) {\n      var defaultValue = _a.defaultValue;\n      return defaultValue;\n    }).map(function (_a) {\n      var variable = _a.variable,\n        defaultValue = _a.defaultValue;\n      var defaultValueObj = {};\n      valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n      return defaultValueObj;\n    });\n    return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n  }\n  return {};\n}\nfunction variablesInOperation(operation) {\n  var names = new Set();\n  if (operation.variableDefinitions) {\n    for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n      var definition = _a[_i];\n      names.add(definition.variable.name.value);\n    }\n  }\n  return names;\n}\nfunction filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\nvar TYPENAME_FIELD = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename'\n  }\n};\nfunction isEmpty(op, fragments) {\n  return op.selectionSet.selections.every(function (selection) {\n    return selection.kind === 'FragmentSpread' && isEmpty(fragments[selection.name.value], fragments);\n  });\n}\nfunction nullIfDocIsEmpty(doc) {\n  return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;\n}\nfunction getDirectiveMatcher(directives) {\n  return function directiveMatcher(directive) {\n    return directives.some(function (dir) {\n      return dir.name && dir.name === directive.name.value || dir.test && dir.test(directive);\n    });\n  };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n  var variablesInUse = Object.create(null);\n  var variablesToRemove = [];\n  var fragmentSpreadsInUse = Object.create(null);\n  var fragmentSpreadsToRemove = [];\n  var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n    Variable: {\n      enter: function (node, _key, parent) {\n        if (parent.kind !== 'VariableDefinition') {\n          variablesInUse[node.name.value] = true;\n        }\n      }\n    },\n    Field: {\n      enter: function (node) {\n        if (directives && node.directives) {\n          var shouldRemoveField = directives.some(function (directive) {\n            return directive.remove;\n          });\n          if (shouldRemoveField && node.directives && node.directives.some(getDirectiveMatcher(directives))) {\n            if (node.arguments) {\n              node.arguments.forEach(function (arg) {\n                if (arg.value.kind === 'Variable') {\n                  variablesToRemove.push({\n                    name: arg.value.name.value\n                  });\n                }\n              });\n            }\n            if (node.selectionSet) {\n              getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                fragmentSpreadsToRemove.push({\n                  name: frag.name.value\n                });\n              });\n            }\n            return null;\n          }\n        }\n      }\n    },\n    FragmentSpread: {\n      enter: function (node) {\n        fragmentSpreadsInUse[node.name.value] = true;\n      }\n    },\n    Directive: {\n      enter: function (node) {\n        if (getDirectiveMatcher(directives)(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n  if (modifiedDoc && filterInPlace(variablesToRemove, function (v) {\n    return !variablesInUse[v.name];\n  }).length) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n  if (modifiedDoc && filterInPlace(fragmentSpreadsToRemove, function (fs) {\n    return !fragmentSpreadsInUse[fs.name];\n  }).length) {\n    modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n  }\n  return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter: function (node, _key, parent) {\n        if (parent && parent.kind === 'OperationDefinition') {\n          return;\n        }\n        var selections = node.selections;\n        if (!selections) {\n          return;\n        }\n        var skip = selections.some(function (selection) {\n          return isField(selection) && (selection.name.value === '__typename' || selection.name.value.lastIndexOf('__', 0) === 0);\n        });\n        if (skip) {\n          return;\n        }\n        var field = parent;\n        if (isField(field) && field.directives && field.directives.some(function (d) {\n          return d.name.value === 'export';\n        })) {\n          return;\n        }\n        return __assign(__assign({}, node), {\n          selections: __spreadArrays(selections, [TYPENAME_FIELD])\n        });\n      }\n    }\n  });\n}\nvar connectionRemoveConfig = {\n  test: function (directive) {\n    var willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (!directive.arguments || !directive.arguments.some(function (arg) {\n        return arg.name.value === 'key';\n      })) {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' + 'You may want to use the key parameter to specify a store key.');\n      }\n    }\n    return willRemove;\n  }\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n  return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n  return selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n  if (!isField(selection)) {\n    return true;\n  }\n  if (!selection.directives) {\n    return false;\n  }\n  return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\nfunction getDirectivesFromDocument(directives, doc) {\n  checkDocument(doc);\n  var parentPath;\n  return nullIfDocIsEmpty(visit(doc, {\n    SelectionSet: {\n      enter: function (node, _key, _parent, path) {\n        var currentPath = path.join('-');\n        if (!parentPath || currentPath === parentPath || !currentPath.startsWith(parentPath)) {\n          if (node.selections) {\n            var selectionsWithDirectives = node.selections.filter(function (selection) {\n              return hasDirectivesInSelection(directives, selection);\n            });\n            if (hasDirectivesInSelectionSet(directives, node, false)) {\n              parentPath = currentPath;\n            }\n            return __assign(__assign({}, node), {\n              selections: selectionsWithDirectives\n            });\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }));\n}\nfunction getArgumentMatcher(config) {\n  return function argumentMatcher(argument) {\n    return config.some(function (aConfig) {\n      return argument.value && argument.value.kind === 'Variable' && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n    });\n  };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n  var argMatcher = getArgumentMatcher(config);\n  return nullIfDocIsEmpty(visit(doc, {\n    OperationDefinition: {\n      enter: function (node) {\n        return __assign(__assign({}, node), {\n          variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n            return !config.some(function (arg) {\n              return arg.name === varDef.variable.name.value;\n            });\n          })\n        });\n      }\n    },\n    Field: {\n      enter: function (node) {\n        var shouldRemoveField = config.some(function (argConfig) {\n          return argConfig.remove;\n        });\n        if (shouldRemoveField) {\n          var argMatchCount_1 = 0;\n          node.arguments.forEach(function (arg) {\n            if (argMatcher(arg)) {\n              argMatchCount_1 += 1;\n            }\n          });\n          if (argMatchCount_1 === 1) {\n            return null;\n          }\n        }\n      }\n    },\n    Argument: {\n      enter: function (node) {\n        if (argMatcher(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n  function enter(node) {\n    if (config.some(function (def) {\n      return def.name === node.name.value;\n    })) {\n      return null;\n    }\n  }\n  return nullIfDocIsEmpty(visit(doc, {\n    FragmentSpread: {\n      enter: enter\n    },\n    FragmentDefinition: {\n      enter: enter\n    }\n  }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n  var allFragments = [];\n  selectionSet.selections.forEach(function (selection) {\n    if ((isField(selection) || isInlineFragment(selection)) && selection.selectionSet) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) {\n        return allFragments.push(frag);\n      });\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n  return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n  var definition = getMainDefinition(document);\n  var definitionOperation = definition.operation;\n  if (definitionOperation === 'query') {\n    return document;\n  }\n  var modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter: function (node) {\n        return __assign(__assign({}, node), {\n          operation: 'query'\n        });\n      }\n    }\n  });\n  return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n  checkDocument(document);\n  var modifiedDoc = removeDirectivesFromDocument([{\n    test: function (directive) {\n      return directive.name.value === 'client';\n    },\n    remove: true\n  }], document);\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter: function (node) {\n          if (node.selectionSet) {\n            var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n              return isField(selection) && selection.name.value === '__typename';\n            });\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        }\n      }\n    });\n  }\n  return modifiedDoc;\n}\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' && navigator.product === 'ReactNative');\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n  return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n    case \"[object Object]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n    default:\n      return val;\n  }\n}\nfunction getEnv() {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n  return 'development';\n}\nfunction isEnv(env) {\n  return getEnv() === env;\n}\nfunction isProduction() {\n  return isEnv('production') === true;\n}\nfunction isDevelopment() {\n  return isEnv('development') === true;\n}\nfunction isTest() {\n  return isEnv('test') === true;\n}\nfunction tryFunctionOrLogError(f) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\nfunction graphQLResultHasError(result) {\n  return result.errors && result.errors.length;\n}\nfunction deepFreeze(o) {\n  Object.freeze(o);\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o[prop] !== null && (typeof o[prop] === 'object' || typeof o[prop] === 'function') && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  return o;\n}\nfunction maybeDeepFreeze(obj) {\n  if (isDevelopment() || isTest()) {\n    var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n  return obj;\n}\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n  var sources = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n  return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n  var target = sources[0] || {};\n  var count = sources.length;\n  if (count > 1) {\n    var pastCopies = [];\n    target = shallowCopyForMerge(target, pastCopies);\n    for (var i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n  return target;\n}\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n  if (isObject(source) && isObject(target)) {\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n    Object.keys(source).forEach(function (sourceKey) {\n      var sourceValue = source[sourceKey];\n      if (hasOwnProperty.call(target, sourceKey)) {\n        var targetValue = target[sourceKey];\n        if (sourceValue !== targetValue) {\n          target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n        }\n      } else {\n        target[sourceKey] = sourceValue;\n      }\n    });\n    return target;\n  }\n  return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n  if (value !== null && typeof value === 'object' && pastCopies.indexOf(value) < 0) {\n    if (Array.isArray(value)) {\n      value = value.slice(0);\n    } else {\n      value = __assign({\n        __proto__: Object.getPrototypeOf(value)\n      }, value);\n    }\n    pastCopies.push(value);\n  }\n  return value;\n}\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n  if (type === void 0) {\n    type = 'warn';\n  }\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\nfunction stripSymbols(data) {\n  return JSON.parse(JSON.stringify(data));\n}\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };","map":{"version":3,"names":["visit","InvariantError","invariant","__assign","__spreadArrays","stringify","equal","isEqual","isScalarValue","value","indexOf","kind","isNumberValue","isStringValue","isBooleanValue","isIntValue","isFloatValue","isVariable","isObjectValue","isListValue","isEnumValue","isNullValue","valueToObjectRepresentation","argObj","name","variables","Number","nestedArgObj_1","fields","map","obj","variableValue","values","listValue","nestedArgArrayObj","process","env","NODE_ENV","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","queryArgs_1","filteredArgs_1","key","JSON","completeFieldName","stringifiedArgs","Object","keys","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","isField","selection","isInlineFragment","isIdValue","idObject","type","generated","toIdValue","idConfig","id","typename","undefined","isJsonValue","jsonObject","defaultValueFromVariable","node","valueFromNode","onVariable","parseInt","parseFloat","v","_i","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","doc","names","Directive","push","hasDirectives","some","hasClientExports","document","isInclusionDirective","filter","directiveArguments","directiveName","ifValue","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","definition","operation","query","selectionSet","selections","assign","target","sources","source","getMutationDefinition","checkDocument","mutationDef","operations","d","getOperationDefinition","getOperationDefinitionOrDie","def","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","apply","variablesInOperation","Set","add","filterInPlace","array","test","context","elem","i","call","TYPENAME_FIELD","isEmpty","op","nullIfDocIsEmpty","getDirectiveMatcher","directiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","create","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","enter","_key","parent","Field","shouldRemoveField","remove","arg","getAllFragmentSpreadsFromSelectionSet","frag","FragmentSpread","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","skip","lastIndexOf","connectionRemoveConfig","willRemove","warn","removeConnectionDirectiveFromDocument","hasDirectivesInSelectionSet","nestedCheck","hasDirectivesInSelection","getDirectivesFromDocument","parentPath","_parent","path","currentPath","join","startsWith","selectionsWithDirectives","getArgumentMatcher","config","argumentMatcher","argument","aConfig","argMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","FragmentDefinition","allFragments","buildQueryFromSelectionSet","definitionOperation","removeClientSetsFromDocument","isTypenameOnly","canUseWeakMap","WeakMap","navigator","product","toString","prototype","cloneDeep","cloneDeepHelper","Map","val","seen","has","get","copy_1","slice","set","child","copy_2","getPrototypeOf","getEnv","isEnv","isProduction","isDevelopment","isTest","tryFunctionOrLogError","f","e","console","error","graphQLResultHasError","result","errors","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","maybeDeepFreeze","symbolIsPolyfilled","Symbol","hasOwnProperty","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","Array","isArray","__proto__","haveWarned","warnOnceInDevelopment","msg","stripSymbols","data","parse"],"sources":["C:/Users/Arvind/Documents/RogersInterviewDemo2/angular/node_modules/apollo-utilities/lib/bundle.esm.js"],"sourcesContent":["import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n    return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\nfunction isNumberValue(value) {\n    return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\nfunction isIdValue(idObject) {\n    return idObject &&\n        idObject.type === 'id' &&\n        typeof idObject.generated === 'boolean';\n}\nfunction toIdValue(idConfig, generated) {\n    if (generated === void 0) { generated = false; }\n    return __assign({ type: 'id', generated: generated }, (typeof idConfig === 'string'\n        ? { id: idConfig, typename: undefined }\n        : idConfig));\n}\nfunction isJsonValue(jsonObject) {\n    return (jsonObject != null &&\n        typeof jsonObject === 'object' &&\n        jsonObject.type === 'json');\n}\nfunction defaultValueFromVariable(node) {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\nfunction valueFromNode(node, onVariable) {\n    if (onVariable === void 0) { onVariable = defaultValueFromVariable; }\n    switch (node.kind) {\n        case 'Variable':\n            return onVariable(node);\n        case 'NullValue':\n            return null;\n        case 'IntValue':\n            return parseInt(node.value, 10);\n        case 'FloatValue':\n            return parseFloat(node.value);\n        case 'ListValue':\n            return node.values.map(function (v) { return valueFromNode(v, onVariable); });\n        case 'ObjectValue': {\n            var value = {};\n            for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n                var field = _a[_i];\n                value[field.name.value] = valueFromNode(field.value, onVariable);\n            }\n            return value;\n        }\n        default:\n            return node.value;\n    }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n    if (field.directives && field.directives.length) {\n        var directiveObj_1 = {};\n        field.directives.forEach(function (directive) {\n            directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n        });\n        return directiveObj_1;\n    }\n    return null;\n}\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 13) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 14) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 15) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 16) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(11) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 12) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\n\nfunction assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nfunction getMutationDefinition(doc) {\n    checkDocument(doc);\n    var mutationDef = doc.definitions.filter(function (definition) {\n        return definition.kind === 'OperationDefinition' &&\n            definition.operation === 'mutation';\n    })[0];\n    process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 1) : invariant(mutationDef, 'Must contain a mutation definition.');\n    return mutationDef;\n}\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 2) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(3) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 4) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationDefinitionOrDie(document) {\n    var def = getOperationDefinition(document);\n    process.env.NODE_ENV === \"production\" ? invariant(def, 5) : invariant(def, \"GraphQL document is missing an operation\");\n    return def;\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 6) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 7) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 8) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 9) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(10) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\nfunction variablesInOperation(operation) {\n    var names = new Set();\n    if (operation.variableDefinitions) {\n        for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n            var definition = _a[_i];\n            names.add(definition.variable.name.value);\n        }\n    }\n    return names;\n}\n\nfunction filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getDirectivesFromDocument(directives, doc) {\n    checkDocument(doc);\n    var parentPath;\n    return nullIfDocIsEmpty(visit(doc, {\n        SelectionSet: {\n            enter: function (node, _key, _parent, path) {\n                var currentPath = path.join('-');\n                if (!parentPath ||\n                    currentPath === parentPath ||\n                    !currentPath.startsWith(parentPath)) {\n                    if (node.selections) {\n                        var selectionsWithDirectives = node.selections.filter(function (selection) { return hasDirectivesInSelection(directives, selection); });\n                        if (hasDirectivesInSelectionSet(directives, node, false)) {\n                            parentPath = currentPath;\n                        }\n                        return __assign(__assign({}, node), { selections: selectionsWithDirectives });\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n        },\n    }));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' &&\n    navigator.product === 'ReactNative');\n\nvar toString = Object.prototype.toString;\nfunction cloneDeep(value) {\n    return cloneDeepHelper(value, new Map());\n}\nfunction cloneDeepHelper(val, seen) {\n    switch (toString.call(val)) {\n        case \"[object Array]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_1 = val.slice(0);\n            seen.set(val, copy_1);\n            copy_1.forEach(function (child, i) {\n                copy_1[i] = cloneDeepHelper(child, seen);\n            });\n            return copy_1;\n        }\n        case \"[object Object]\": {\n            if (seen.has(val))\n                return seen.get(val);\n            var copy_2 = Object.create(Object.getPrototypeOf(val));\n            seen.set(val, copy_2);\n            Object.keys(val).forEach(function (key) {\n                copy_2[key] = cloneDeepHelper(val[key], seen);\n            });\n            return copy_2;\n        }\n        default:\n            return val;\n    }\n}\n\nfunction getEnv() {\n    if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n        return process.env.NODE_ENV;\n    }\n    return 'development';\n}\nfunction isEnv(env) {\n    return getEnv() === env;\n}\nfunction isProduction() {\n    return isEnv('production') === true;\n}\nfunction isDevelopment() {\n    return isEnv('development') === true;\n}\nfunction isTest() {\n    return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n    try {\n        return f();\n    }\n    catch (e) {\n        if (console.error) {\n            console.error(e);\n        }\n    }\n}\nfunction graphQLResultHasError(result) {\n    return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n    Object.freeze(o);\n    Object.getOwnPropertyNames(o).forEach(function (prop) {\n        if (o[prop] !== null &&\n            (typeof o[prop] === 'object' || typeof o[prop] === 'function') &&\n            !Object.isFrozen(o[prop])) {\n            deepFreeze(o[prop]);\n        }\n    });\n    return o;\n}\nfunction maybeDeepFreeze(obj) {\n    if (isDevelopment() || isTest()) {\n        var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n        if (!symbolIsPolyfilled) {\n            return deepFreeze(obj);\n        }\n    }\n    return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction mergeDeep() {\n    var sources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sources[_i] = arguments[_i];\n    }\n    return mergeDeepArray(sources);\n}\nfunction mergeDeepArray(sources) {\n    var target = sources[0] || {};\n    var count = sources.length;\n    if (count > 1) {\n        var pastCopies = [];\n        target = shallowCopyForMerge(target, pastCopies);\n        for (var i = 1; i < count; ++i) {\n            target = mergeHelper(target, sources[i], pastCopies);\n        }\n    }\n    return target;\n}\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object';\n}\nfunction mergeHelper(target, source, pastCopies) {\n    if (isObject(source) && isObject(target)) {\n        if (Object.isExtensible && !Object.isExtensible(target)) {\n            target = shallowCopyForMerge(target, pastCopies);\n        }\n        Object.keys(source).forEach(function (sourceKey) {\n            var sourceValue = source[sourceKey];\n            if (hasOwnProperty.call(target, sourceKey)) {\n                var targetValue = target[sourceKey];\n                if (sourceValue !== targetValue) {\n                    target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n                }\n            }\n            else {\n                target[sourceKey] = sourceValue;\n            }\n        });\n        return target;\n    }\n    return source;\n}\nfunction shallowCopyForMerge(value, pastCopies) {\n    if (value !== null &&\n        typeof value === 'object' &&\n        pastCopies.indexOf(value) < 0) {\n        if (Array.isArray(value)) {\n            value = value.slice(0);\n        }\n        else {\n            value = __assign({ __proto__: Object.getPrototypeOf(value) }, value);\n        }\n        pastCopies.push(value);\n    }\n    return value;\n}\n\nvar haveWarned = Object.create({});\nfunction warnOnceInDevelopment(msg, type) {\n    if (type === void 0) { type = 'warn'; }\n    if (!isProduction() && !haveWarned[msg]) {\n        if (!isTest()) {\n            haveWarned[msg] = true;\n        }\n        if (type === 'error') {\n            console.error(msg);\n        }\n        else {\n            console.warn(msg);\n        }\n    }\n}\n\nfunction stripSymbols(data) {\n    return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}