{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\nvar didWarnUncachedGetSnapshot = false;\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = React[uSESKey];\nexport var useSyncExternalStore = realHook || function (subscribe, getSnapshot, getServerSnapshot) {\n  var value = getSnapshot();\n  if (__DEV__ && !didWarnUncachedGetSnapshot && value !== getSnapshot()) {\n    didWarnUncachedGetSnapshot = true;\n    __DEV__ && invariant.error('The result of getSnapshot should be cached to avoid an infinite loop');\n  }\n  var _a = React.useState({\n      inst: {\n        value: value,\n        getSnapshot: getSnapshot\n      }\n    }),\n    inst = _a[0].inst,\n    forceUpdate = _a[1];\n  if (canUseLayoutEffect) {\n    React.useLayoutEffect(function () {\n      Object.assign(inst, {\n        value: value,\n        getSnapshot: getSnapshot\n      });\n      if (checkIfSnapshotChanged(inst)) {\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }, [subscribe, value, getSnapshot]);\n  } else {\n    Object.assign(inst, {\n      value: value,\n      getSnapshot: getSnapshot\n    });\n  }\n  React.useEffect(function () {\n    if (checkIfSnapshotChanged(inst)) {\n      forceUpdate({\n        inst: inst\n      });\n    }\n    return subscribe(function handleStoreChange() {\n      if (checkIfSnapshotChanged(inst)) {\n        forceUpdate({\n          inst: inst\n        });\n      }\n    });\n  }, [subscribe]);\n  return value;\n};\nfunction checkIfSnapshotChanged(_a) {\n  var value = _a.value,\n    getSnapshot = _a.getSnapshot;\n  try {\n    return value !== getSnapshot();\n  } catch (_b) {\n    return true;\n  }\n}","map":{"version":3,"names":["invariant","React","canUseLayoutEffect","didWarnUncachedGetSnapshot","uSESKey","realHook","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","value","__DEV__","error","_a","useState","inst","forceUpdate","useLayoutEffect","Object","assign","checkIfSnapshotChanged","useEffect","handleStoreChange","_b"],"sources":["C:/Users/Arvind/Documents/RogersInterviewDemo2/angular/node_modules/@apollo/client/react/hooks/useSyncExternalStore.js"],"sourcesContent":["import { invariant } from \"../../utilities/globals/index.js\";\nimport * as React from 'react';\nimport { canUseLayoutEffect } from \"../../utilities/index.js\";\nvar didWarnUncachedGetSnapshot = false;\nvar uSESKey = \"useSyncExternalStore\";\nvar realHook = React[uSESKey];\nexport var useSyncExternalStore = realHook || (function (subscribe, getSnapshot, getServerSnapshot) {\n    var value = getSnapshot();\n    if (__DEV__ &&\n        !didWarnUncachedGetSnapshot &&\n        value !== getSnapshot()) {\n        didWarnUncachedGetSnapshot = true;\n        __DEV__ && invariant.error('The result of getSnapshot should be cached to avoid an infinite loop');\n    }\n    var _a = React.useState({ inst: { value: value, getSnapshot: getSnapshot } }), inst = _a[0].inst, forceUpdate = _a[1];\n    if (canUseLayoutEffect) {\n        React.useLayoutEffect(function () {\n            Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        }, [subscribe, value, getSnapshot]);\n    }\n    else {\n        Object.assign(inst, { value: value, getSnapshot: getSnapshot });\n    }\n    React.useEffect(function () {\n        if (checkIfSnapshotChanged(inst)) {\n            forceUpdate({ inst: inst });\n        }\n        return subscribe(function handleStoreChange() {\n            if (checkIfSnapshotChanged(inst)) {\n                forceUpdate({ inst: inst });\n            }\n        });\n    }, [subscribe]);\n    return value;\n});\nfunction checkIfSnapshotChanged(_a) {\n    var value = _a.value, getSnapshot = _a.getSnapshot;\n    try {\n        return value !== getSnapshot();\n    }\n    catch (_b) {\n        return true;\n    }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,kCAAkC;AAC5D,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,IAAIC,0BAA0B,GAAG,KAAK;AACtC,IAAIC,OAAO,GAAG,sBAAsB;AACpC,IAAIC,QAAQ,GAAGJ,KAAK,CAACG,OAAO,CAAC;AAC7B,OAAO,IAAIE,oBAAoB,GAAGD,QAAQ,IAAK,UAAUE,SAAS,EAAEC,WAAW,EAAEC,iBAAiB,EAAE;EAChG,IAAIC,KAAK,GAAGF,WAAW,EAAE;EACzB,IAAIG,OAAO,IACP,CAACR,0BAA0B,IAC3BO,KAAK,KAAKF,WAAW,EAAE,EAAE;IACzBL,0BAA0B,GAAG,IAAI;IACjCQ,OAAO,IAAIX,SAAS,CAACY,KAAK,CAAC,sEAAsE,CAAC;EACtG;EACA,IAAIC,EAAE,GAAGZ,KAAK,CAACa,QAAQ,CAAC;MAAEC,IAAI,EAAE;QAAEL,KAAK,EAAEA,KAAK;QAAEF,WAAW,EAAEA;MAAY;IAAE,CAAC,CAAC;IAAEO,IAAI,GAAGF,EAAE,CAAC,CAAC,CAAC,CAACE,IAAI;IAAEC,WAAW,GAAGH,EAAE,CAAC,CAAC,CAAC;EACrH,IAAIX,kBAAkB,EAAE;IACpBD,KAAK,CAACgB,eAAe,CAAC,YAAY;MAC9BC,MAAM,CAACC,MAAM,CAACJ,IAAI,EAAE;QAAEL,KAAK,EAAEA,KAAK;QAAEF,WAAW,EAAEA;MAAY,CAAC,CAAC;MAC/D,IAAIY,sBAAsB,CAACL,IAAI,CAAC,EAAE;QAC9BC,WAAW,CAAC;UAAED,IAAI,EAAEA;QAAK,CAAC,CAAC;MAC/B;IACJ,CAAC,EAAE,CAACR,SAAS,EAAEG,KAAK,EAAEF,WAAW,CAAC,CAAC;EACvC,CAAC,MACI;IACDU,MAAM,CAACC,MAAM,CAACJ,IAAI,EAAE;MAAEL,KAAK,EAAEA,KAAK;MAAEF,WAAW,EAAEA;IAAY,CAAC,CAAC;EACnE;EACAP,KAAK,CAACoB,SAAS,CAAC,YAAY;IACxB,IAAID,sBAAsB,CAACL,IAAI,CAAC,EAAE;MAC9BC,WAAW,CAAC;QAAED,IAAI,EAAEA;MAAK,CAAC,CAAC;IAC/B;IACA,OAAOR,SAAS,CAAC,SAASe,iBAAiB,GAAG;MAC1C,IAAIF,sBAAsB,CAACL,IAAI,CAAC,EAAE;QAC9BC,WAAW,CAAC;UAAED,IAAI,EAAEA;QAAK,CAAC,CAAC;MAC/B;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,CAACR,SAAS,CAAC,CAAC;EACf,OAAOG,KAAK;AAChB,CAAE;AACF,SAASU,sBAAsB,CAACP,EAAE,EAAE;EAChC,IAAIH,KAAK,GAAGG,EAAE,CAACH,KAAK;IAAEF,WAAW,GAAGK,EAAE,CAACL,WAAW;EAClD,IAAI;IACA,OAAOE,KAAK,KAAKF,WAAW,EAAE;EAClC,CAAC,CACD,OAAOe,EAAE,EAAE;IACP,OAAO,IAAI;EACf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}