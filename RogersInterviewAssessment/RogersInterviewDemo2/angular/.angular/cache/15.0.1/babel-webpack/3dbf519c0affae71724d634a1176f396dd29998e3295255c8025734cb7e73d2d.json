{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { useCallback, useMemo, useRef } from 'react';\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { useInternalState } from \"./useQuery.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nvar EAGER_METHODS = ['refetch', 'reobserve', 'fetchMore', 'updateQuery', 'startPolling', 'subscribeToMore'];\nexport function useLazyQuery(query, options) {\n  var internalState = useInternalState(useApolloClient(options && options.client), query);\n  var execOptionsRef = useRef();\n  var merged = execOptionsRef.current ? mergeOptions(options, execOptionsRef.current) : options;\n  var useQueryResult = internalState.useQuery(__assign(__assign({}, merged), {\n    skip: !execOptionsRef.current\n  }));\n  var initialFetchPolicy = useQueryResult.observable.options.initialFetchPolicy || internalState.getDefaultFetchPolicy();\n  var result = Object.assign(useQueryResult, {\n    called: !!execOptionsRef.current\n  });\n  var eagerMethods = useMemo(function () {\n    var eagerMethods = {};\n    var _loop_1 = function (key) {\n      var method = result[key];\n      eagerMethods[key] = function () {\n        if (!execOptionsRef.current) {\n          execOptionsRef.current = Object.create(null);\n          internalState.forceUpdate();\n        }\n        return method.apply(this, arguments);\n      };\n    };\n    for (var _i = 0, EAGER_METHODS_1 = EAGER_METHODS; _i < EAGER_METHODS_1.length; _i++) {\n      var key = EAGER_METHODS_1[_i];\n      _loop_1(key);\n    }\n    return eagerMethods;\n  }, []);\n  Object.assign(result, eagerMethods);\n  var execute = useCallback(function (executeOptions) {\n    execOptionsRef.current = executeOptions ? __assign(__assign({}, executeOptions), {\n      fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy\n    }) : {\n      fetchPolicy: initialFetchPolicy\n    };\n    var promise = internalState.asyncUpdate().then(function (queryResult) {\n      return Object.assign(queryResult, eagerMethods);\n    });\n    promise.catch(function () {});\n    return promise;\n  }, []);\n  return [execute, result];\n}","map":{"version":3,"names":["__assign","useCallback","useMemo","useRef","mergeOptions","useInternalState","useApolloClient","EAGER_METHODS","useLazyQuery","query","options","internalState","client","execOptionsRef","merged","current","useQueryResult","useQuery","skip","initialFetchPolicy","observable","getDefaultFetchPolicy","result","Object","assign","called","eagerMethods","_loop_1","key","method","create","forceUpdate","apply","arguments","_i","EAGER_METHODS_1","length","execute","executeOptions","fetchPolicy","promise","asyncUpdate","then","queryResult","catch"],"sources":["C:/Users/Arvind/Documents/RogersInterviewDemo2/angular/node_modules/@apollo/client/react/hooks/useLazyQuery.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { useCallback, useMemo, useRef } from 'react';\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { useInternalState } from \"./useQuery.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nvar EAGER_METHODS = [\n    'refetch',\n    'reobserve',\n    'fetchMore',\n    'updateQuery',\n    'startPolling',\n    'subscribeToMore',\n];\nexport function useLazyQuery(query, options) {\n    var internalState = useInternalState(useApolloClient(options && options.client), query);\n    var execOptionsRef = useRef();\n    var merged = execOptionsRef.current\n        ? mergeOptions(options, execOptionsRef.current)\n        : options;\n    var useQueryResult = internalState.useQuery(__assign(__assign({}, merged), { skip: !execOptionsRef.current }));\n    var initialFetchPolicy = useQueryResult.observable.options.initialFetchPolicy ||\n        internalState.getDefaultFetchPolicy();\n    var result = Object.assign(useQueryResult, {\n        called: !!execOptionsRef.current,\n    });\n    var eagerMethods = useMemo(function () {\n        var eagerMethods = {};\n        var _loop_1 = function (key) {\n            var method = result[key];\n            eagerMethods[key] = function () {\n                if (!execOptionsRef.current) {\n                    execOptionsRef.current = Object.create(null);\n                    internalState.forceUpdate();\n                }\n                return method.apply(this, arguments);\n            };\n        };\n        for (var _i = 0, EAGER_METHODS_1 = EAGER_METHODS; _i < EAGER_METHODS_1.length; _i++) {\n            var key = EAGER_METHODS_1[_i];\n            _loop_1(key);\n        }\n        return eagerMethods;\n    }, []);\n    Object.assign(result, eagerMethods);\n    var execute = useCallback(function (executeOptions) {\n        execOptionsRef.current = executeOptions ? __assign(__assign({}, executeOptions), { fetchPolicy: executeOptions.fetchPolicy || initialFetchPolicy }) : {\n            fetchPolicy: initialFetchPolicy,\n        };\n        var promise = internalState\n            .asyncUpdate()\n            .then(function (queryResult) { return Object.assign(queryResult, eagerMethods); });\n        promise.catch(function () { });\n        return promise;\n    }, []);\n    return [execute, result];\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,OAAO,EAAEC,MAAM,QAAQ,OAAO;AACpD,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,gBAAgB,QAAQ,eAAe;AAChD,SAASC,eAAe,QAAQ,sBAAsB;AACtD,IAAIC,aAAa,GAAG,CAChB,SAAS,EACT,WAAW,EACX,WAAW,EACX,aAAa,EACb,cAAc,EACd,iBAAiB,CACpB;AACD,OAAO,SAASC,YAAY,CAACC,KAAK,EAAEC,OAAO,EAAE;EACzC,IAAIC,aAAa,GAAGN,gBAAgB,CAACC,eAAe,CAACI,OAAO,IAAIA,OAAO,CAACE,MAAM,CAAC,EAAEH,KAAK,CAAC;EACvF,IAAII,cAAc,GAAGV,MAAM,EAAE;EAC7B,IAAIW,MAAM,GAAGD,cAAc,CAACE,OAAO,GAC7BX,YAAY,CAACM,OAAO,EAAEG,cAAc,CAACE,OAAO,CAAC,GAC7CL,OAAO;EACb,IAAIM,cAAc,GAAGL,aAAa,CAACM,QAAQ,CAACjB,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEc,MAAM,CAAC,EAAE;IAAEI,IAAI,EAAE,CAACL,cAAc,CAACE;EAAQ,CAAC,CAAC,CAAC;EAC9G,IAAII,kBAAkB,GAAGH,cAAc,CAACI,UAAU,CAACV,OAAO,CAACS,kBAAkB,IACzER,aAAa,CAACU,qBAAqB,EAAE;EACzC,IAAIC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACR,cAAc,EAAE;IACvCS,MAAM,EAAE,CAAC,CAACZ,cAAc,CAACE;EAC7B,CAAC,CAAC;EACF,IAAIW,YAAY,GAAGxB,OAAO,CAAC,YAAY;IACnC,IAAIwB,YAAY,GAAG,CAAC,CAAC;IACrB,IAAIC,OAAO,GAAG,UAAUC,GAAG,EAAE;MACzB,IAAIC,MAAM,GAAGP,MAAM,CAACM,GAAG,CAAC;MACxBF,YAAY,CAACE,GAAG,CAAC,GAAG,YAAY;QAC5B,IAAI,CAACf,cAAc,CAACE,OAAO,EAAE;UACzBF,cAAc,CAACE,OAAO,GAAGQ,MAAM,CAACO,MAAM,CAAC,IAAI,CAAC;UAC5CnB,aAAa,CAACoB,WAAW,EAAE;QAC/B;QACA,OAAOF,MAAM,CAACG,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC;MACxC,CAAC;IACL,CAAC;IACD,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEC,eAAe,GAAG5B,aAAa,EAAE2B,EAAE,GAAGC,eAAe,CAACC,MAAM,EAAEF,EAAE,EAAE,EAAE;MACjF,IAAIN,GAAG,GAAGO,eAAe,CAACD,EAAE,CAAC;MAC7BP,OAAO,CAACC,GAAG,CAAC;IAChB;IACA,OAAOF,YAAY;EACvB,CAAC,EAAE,EAAE,CAAC;EACNH,MAAM,CAACC,MAAM,CAACF,MAAM,EAAEI,YAAY,CAAC;EACnC,IAAIW,OAAO,GAAGpC,WAAW,CAAC,UAAUqC,cAAc,EAAE;IAChDzB,cAAc,CAACE,OAAO,GAAGuB,cAAc,GAAGtC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEsC,cAAc,CAAC,EAAE;MAAEC,WAAW,EAAED,cAAc,CAACC,WAAW,IAAIpB;IAAmB,CAAC,CAAC,GAAG;MAClJoB,WAAW,EAAEpB;IACjB,CAAC;IACD,IAAIqB,OAAO,GAAG7B,aAAa,CACtB8B,WAAW,EAAE,CACbC,IAAI,CAAC,UAAUC,WAAW,EAAE;MAAE,OAAOpB,MAAM,CAACC,MAAM,CAACmB,WAAW,EAAEjB,YAAY,CAAC;IAAE,CAAC,CAAC;IACtFc,OAAO,CAACI,KAAK,CAAC,YAAY,CAAE,CAAC,CAAC;IAC9B,OAAOJ,OAAO;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO,CAACH,OAAO,EAAEf,MAAM,CAAC;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}