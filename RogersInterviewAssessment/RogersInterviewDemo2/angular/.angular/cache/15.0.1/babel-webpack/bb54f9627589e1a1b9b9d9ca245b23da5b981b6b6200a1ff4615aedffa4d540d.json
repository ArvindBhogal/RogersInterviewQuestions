{"ast":null,"code":"import { gql } from 'apollo-angular';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"apollo-angular\";\nexport class ContentfulService {\n  constructor(http, apollo) {\n    this.http = http;\n    this.apollo = apollo;\n    this.URL = 'https://cdn.contentful.com/spaces/8utyj17y1gom/entries?access_token=e50d8ac79fd7a3545d8c0049c6a1216f5d358a192467c77584eca6fad21e0f37&content_type=pageTemplate&include=1&fields.url=%2Fhome%2Fsupport';\n  }\n  /* retrieveContent() is the REST API call provided in step 1. Running a simple GET request to retrieve data */\n  retrieveContent() {\n    return this.http.get(this.URL);\n  }\n  /* retrieveGraphQLContent() is the GraphQL API call constructed for step 2. Assistance of apollo-angular was used\r\n  and the query returns the entire collection instead of just one page template. */\n  retrieveGraphQLContent() {\n    return this.apollo.query({\n      errorPolicy: \"all\",\n      query: gql`\n        {\n          pageTemplateCollection {\n            items{\n              url\n              seo{\n                title\n                description\n                isNoIndex\n              }\n            }\n          }\n        }`\n    });\n  }\n  static #_ = this.ɵfac = function ContentfulService_Factory(t) {\n    return new (t || ContentfulService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Apollo));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContentfulService,\n    factory: ContentfulService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAAiBA,GAAG,QAAQ,gBAAgB;;;;AAM5C,OAAM,MAAOC,iBAAiB;EAI5BC,YACUC,IAAgB,EAChBC,MAAc;IADd,SAAI,GAAJD,IAAI;IACJ,WAAM,GAANC,MAAM;IAJR,QAAG,GAAG,uMAAuM;EAKlN;EAEH;EAEAC,eAAe;IACb,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACC,GAAG,CAAC;EAChC;EAEA;;EAGAC,sBAAsB;IACpB,OAAO,IAAI,CAACJ,MAAM,CAACK,KAAK,CAAC;MACrBC,WAAW,EAAE,KAAK;MAClBD,KAAK,EAAET,GAAG;;;;;;;;;;;;;KAaX,CAAC;EACN;EAAC;qBAnCUC,iBAAiB;EAAA;EAAA;WAAjBA,iBAAiB;IAAAU,SAAjBV,iBAAiB;IAAAW,YAFhB;EAAM","names":["gql","ContentfulService","constructor","http","apollo","retrieveContent","get","URL","retrieveGraphQLContent","query","errorPolicy","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Arvind\\Documents\\RogersInterviewDemo2\\angular\\src\\app\\services\\contentful.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Apollo, gql } from 'apollo-angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentfulService {\n\n  private URL = 'https://cdn.contentful.com/spaces/8utyj17y1gom/entries?access_token=e50d8ac79fd7a3545d8c0049c6a1216f5d358a192467c77584eca6fad21e0f37&content_type=pageTemplate&include=1&fields.url=%2Fhome%2Fsupport';\n\n  constructor(\n    private http: HttpClient,\n    private apollo: Apollo\n  ) {}\n\n  /* retrieveContent() is the REST API call provided in step 1. Running a simple GET request to retrieve data */\n\n  retrieveContent(): Observable<any> {\n    return this.http.get(this.URL);\n  }\n\n  /* retrieveGraphQLContent() is the GraphQL API call constructed for step 2. Assistance of apollo-angular was used\n  and the query returns the entire collection instead of just one page template. */\n\n  retrieveGraphQLContent():  Observable<any> {\n    return this.apollo.query({\n        errorPolicy: \"all\",\n        query: gql`\n        {\n          pageTemplateCollection {\n            items{\n              url\n              seo{\n                title\n                description\n                isNoIndex\n              }\n            }\n          }\n        }`\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}